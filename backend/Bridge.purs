-- File auto generated by purescript-bridge! --
module Bridge where

import Data.Argonaut.Aeson.Decode.Generic (genericDecodeAeson)
import Data.Argonaut.Aeson.Encode.Generic (genericEncodeAeson)
import Data.Argonaut.Aeson.Options as Argonaut
import Data.Argonaut.Decode.Class (class DecodeJson, decodeJson)
import Data.Argonaut.Encode.Class (class EncodeJson, encodeJson)
import Data.Generic.Rep (class Generic)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)

import Prelude

newtype Cmd_Login =
    Cmd_Login {
      email :: String
    , password :: String
    , server :: String
    }

instance encodeJsonCmd_Login :: EncodeJson Cmd_Login where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonCmd_Login :: DecodeJson Cmd_Login where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericCmd_Login :: Generic Cmd_Login _
derive instance eqCmd_Login :: Eq Cmd_Login
derive instance ordCmd_Login :: Ord Cmd_Login

newtype Cmd =
    Login Cmd_Login

instance encodeJsonCmd :: EncodeJson Cmd where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonCmd :: DecodeJson Cmd where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericCmd :: Generic Cmd _
derive instance eqCmd :: Eq Cmd
derive instance ordCmd :: Ord Cmd

newtype Sub_Hello =
    Sub_Hello {
      first :: String
    , second :: String
    }

instance encodeJsonSub_Hello :: EncodeJson Sub_Hello where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonSub_Hello :: DecodeJson Sub_Hello where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericSub_Hello :: Generic Sub_Hello _
derive instance eqSub_Hello :: Eq Sub_Hello
derive instance ordSub_Hello :: Ord Sub_Hello

data Sub =
    Empty
  | GotEverything String
  | Hello Sub_Hello

instance encodeJsonSub :: EncodeJson Sub where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonSub :: DecodeJson Sub where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericSub :: Generic Sub _
derive instance eqSub :: Eq Sub
derive instance ordSub :: Ord Sub
