-- File auto generated by purescript-bridge! --
module Bridge where

import Data.Argonaut.Decode.Generic (genericDecodeJsonWith)
import Data.Argonaut.Encode.Generic (genericEncodeJsonWith)
import Data.Argonaut.Types.Generic as Argonaut
import Data.Argonaut.Decode.Class (class DecodeJson, decodeJson)
import Data.Argonaut.Encode.Class (class EncodeJson, encodeJson)
import Data.Generic.Rep (class Generic)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)

import Prelude

newtype Cmd_Login =
    Cmd_Login {
      email :: String
    , server :: String
    }

instance encodeJsonCmd_Login :: EncodeJson Cmd_Login where
  encodeJson = genericEncodeJsonWith Argonaut.defaultEncoding
instance decodeJsonCmd_Login :: DecodeJson Cmd_Login where
  decodeJson = genericDecodeJsonWith Argonaut.defaultEncoding
derive instance genericCmd_Login :: Generic Cmd_Login _
derive instance eqCmd_Login :: Eq Cmd_Login
derive instance ordCmd_Login :: Ord Cmd_Login

newtype Cmd =
    Login Cmd_Login

instance encodeJsonCmd :: EncodeJson Cmd where
  encodeJson = genericEncodeJsonWith Argonaut.defaultEncoding
instance decodeJsonCmd :: DecodeJson Cmd where
  decodeJson = genericDecodeJsonWith Argonaut.defaultEncoding
derive instance genericCmd :: Generic Cmd _
derive instance eqCmd :: Eq Cmd
derive instance ordCmd :: Ord Cmd

data Sub =
    Hello

instance encodeJsonSub :: EncodeJson Sub where
  encodeJson = genericEncodeJsonWith Argonaut.defaultEncoding
instance decodeJsonSub :: DecodeJson Sub where
  decodeJson = genericDecodeJsonWith Argonaut.defaultEncoding
derive instance genericSub :: Generic Sub _
derive instance eqSub :: Eq Sub
derive instance ordSub :: Ord Sub
